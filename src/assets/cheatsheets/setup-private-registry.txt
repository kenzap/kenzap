# create new VPS instance
go to hetzner or DO portal

# gen ssh key
ssh-keygen

# create storage directory
mkdir /data

# setup docker, ssh to node https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-22-04
apt-get update -y
sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update -y
apt-cache policy docker-ce
sudo apt install docker-ce
sudo systemctl status docker

# setup registry
mkdir /data/docker-registry
cd /data/docker-registry

# create /data/docker-registry/docker-compose.yml sudo nano docker-compose.yml
services:                                                                                                                                                                                                                                                                                                                                                                         
  kubernetes:
    image: registry:latest
    container_name: kubernetes
    ports:
    - "8317:8317"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/registry.password
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
      REGISTRY_HTTP_ADDR: 0.0.0.0:8317
      REGISTRY_STORAGE_DELETE_ENABLED: 1
    volumes:
    - ./kubernetes-auth:/auth
    - ./kubernetes-data:/data

# run registry    
sudo docker compose up -d --remove-orphans
sudo apt-get install apache2-utils

# point dns record
kubernetes-registry.kenzap.cloud -> registry_ip_addreaa

# setup nginx
sudo apt install nginx -y
sudo ufw allow 'Nginx HTTP'
systemctl status nginx

# setup certbotY
sudo apt install certbot python3-certbot-nginx

# nginx site directory
mkdir -p /var/www/kubernetes/;

# change server_name _ to server_name kubernetes-registry.kenzap.cloud sudo nano /etc/nginx/sites-enabled/kubernetes-registry.kenzap.cloud 
server {
        listen 80;
        listen [::]:80;

        root /var/www/kubernetes/;
        index index.html;

        server_name kubernetes-registry.kenzap.cloud;
   
        location / {
            if ($http_user_agent ~ "^(docker/1.(3|4|5(?!.[0-9]-dev))|Go ).*$" ) {
              return 404;
            }
          
            proxy_pass                          http://localhost:8317;
            proxy_set_header  Host              $http_host;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
            proxy_buffers           32  200m;
            proxy_busy_buffers_size     200m;
            proxy_buffer_size           512k;
            client_max_body_size        2000m;
            client_body_buffer_size     200m;
        }
      }
    
sudo systemctl reload nginx
sudo certbot --nginx -d kubernetes-registry.kenzap.cloud

# create registry user
sudo mkdir -p /data/docker-registry/kubernetes-auth; cd /data/docker-registry/kubernetes-auth; sudo htpasswd -Bbc registry.password kubernetes WqwEqxFhbdQrYewcivucUewwjkhsdac0bSdsdf345dfax
history -c

# run
cd /data/docker-registry; sudo docker compose up -d --remove-orphans; sudo systemctl reload nginx;

# listing resources
https://stackoverflow.com/questions/31251356/how-to-get-a-list-of-images-on-docker-registry-v2

# clean up
https://gist.github.com/DavidPesticcio/314e3e88c9bf71a0729d63119f5ae527

# alternative registry services
https://github.com/goharbor/harbor
https://github.com/Trow-Registry/trow https://computingforgeeks.com/trow-container-image-registry-with-kubernetes/